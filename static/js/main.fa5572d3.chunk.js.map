{"version":3,"sources":["components/resultScreen/result.js","components/resultScreen/calculation.js","components/resultScreen/screen.js","components/button.js","components/keypad.js","components/calculator.js","App.js","serviceWorker.js","index.js"],"names":["result","props","Result","styled","div","children","calculation","Calculation","screen","Screen","equation","button","classes","type","push","className","join","onClick","handlePress","keypad","Keypad","Calculator","state","event","preventDefault","pressedButton","target","innerHTML","clear","indexOf","evalRes","math","Number","isInteger","toFixed","setState","error","alert","trim","substr","length","this","React","Component","App","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.fa5572d3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../../App.css\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst result = (props) => {\r\n  const Result = styled.div`\r\n    grid-column-start: 1;\r\n    grid-column-end: 5;\r\n    grid-row-start: 1;\r\n\r\n    text-align: right;\r\n    font-size: 34px;\r\n    font-weight: 500;\r\n    padding: 10px;\r\n    color: #fff;\r\n    padding: 10px;\r\n    padding-top: 15px;\r\n\r\n    font-family: -apple-system, \"Montserrat\", sans-serif;\r\n  `;\r\n  return <Result>{props.children}</Result>;\r\n};\r\n\r\nexport default result;\r\n","import React from \"react\";\r\nimport \"../../App.css\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst calculation = (props) => {\r\n  const Calculation = styled.div`\r\n    grid-column-start: 1;\r\n    grid-column-end: 5;\r\n    grid-row-start: 2;\r\n\r\n    text-align: right;\r\n    font-size: 18px;\r\n    padding-right: 10px;\r\n  `;\r\n\r\n  return <Calculation>{props.children}</Calculation>;\r\n};\r\n\r\nexport default calculation;\r\n","import React from \"react\";\r\nimport \"../../App.css\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport Result from \"./result\";\r\nimport Calculation from \"./calculation\";\r\n\r\nconst screen = (props) => {\r\n  const Screen = styled.div`\r\n    background-color: #94093b;\r\n    width: 280px;\r\n    height: 100px;\r\n  `;\r\n  return (\r\n    <Screen>\r\n      <Result>{props.result}</Result>\r\n      <Calculation>{props.equation}</Calculation>\r\n    </Screen>\r\n  );\r\n};\r\n\r\nexport default screen;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst button = (props) => {\r\n  const classes = [\"btn\"];\r\n\r\n  if (typeof props !== \"undefined\" && typeof props.type !== \"undefined\")\r\n    classes.push(\"btn--\" + props.type);\r\n\r\n  return (\r\n    <button className={classes.join(\" \")} onClick={props.handlePress}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default button;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport Button from \"./button\";\r\n\r\nconst keypad = (props) => {\r\n  const Keypad = styled.div`\r\n    grid-column-start: 1;\r\n    grid-column-end: 5;\r\n    grid-row-start: 3;\r\n    grid-row-end: 5;\r\n  `;\r\n\r\n  return (\r\n    <Keypad className=\"btn\">\r\n      <Button type=\"action\" handlePress={props.handlePress}>\r\n        C\r\n      </Button>\r\n      <Button type=\"action\" handlePress={props.handlePress}>\r\n        del\r\n      </Button>\r\n      <Button type=\"action\" handlePress={props.handlePress}>\r\n        %\r\n      </Button>\r\n      <Button type=\"action\" handlePress={props.handlePress}>\r\n        /\r\n      </Button>\r\n      <Button type=\"num\" handlePress={props.handlePress}>\r\n        1\r\n      </Button>\r\n      <Button type=\"num\" handlePress={props.handlePress}>\r\n        2\r\n      </Button>\r\n      <Button type=\"num\" handlePress={props.handlePress}>\r\n        3\r\n      </Button>\r\n      <Button type=\"action\" handlePress={props.handlePress}>\r\n        *\r\n      </Button>\r\n      <Button type=\"num\" handlePress={props.handlePress}>\r\n        4\r\n      </Button>\r\n      <Button type=\"num\" handlePress={props.handlePress}>\r\n        5\r\n      </Button>\r\n      <Button type=\"num\" handlePress={props.handlePress}>\r\n        6\r\n      </Button>\r\n      <Button type=\"action\" handlePress={props.handlePress}>\r\n        -\r\n      </Button>\r\n      <Button type=\"num\" handlePress={props.handlePress}>\r\n        7\r\n      </Button>\r\n      <Button type=\"num\" handlePress={props.handlePress}>\r\n        8\r\n      </Button>\r\n      <Button type=\"num\" handlePress={props.handlePress}>\r\n        9\r\n      </Button>\r\n      <Button type=\"action\" handlePress={props.handlePress}>\r\n        +\r\n      </Button>\r\n      <Button type=\"zero\" handlePress={props.handlePress}>\r\n        0\r\n      </Button>\r\n      <Button type=\"num\" handlePress={props.handlePress}>\r\n        .\r\n      </Button>\r\n      <Button type=\"equal\" handlePress={props.handlePress}>\r\n        =\r\n      </Button>\r\n    </Keypad>\r\n  );\r\n};\r\n\r\nexport default keypad;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport * as math from \"mathjs\";\r\n\r\nimport Screen from \"./resultScreen/screen\";\r\nimport Keypad from \"./keypad\";\r\n\r\nclass Calculator extends React.Component {\r\n  state = {\r\n    equation: \"\",\r\n    result: 0,\r\n  };\r\n\r\n  handlePress = (event) => {\r\n    event.preventDefault();\r\n    let equation = this.state.equation;\r\n    const pressedButton = event.target.innerHTML;\r\n\r\n    if (pressedButton === \"C\") return this.clear();\r\n    else if (\r\n      (pressedButton >= \"0\" && pressedButton <= \"9\") ||\r\n      pressedButton === \".\"\r\n    )\r\n      equation += pressedButton;\r\n    else if ([\"+\", \"-\", \"*\", \"/\", \"%\"].indexOf(pressedButton) !== -1)\r\n      equation += \" \" + pressedButton + \" \";\r\n    else if (pressedButton === \"=\") {\r\n      try {\r\n        const evalRes = math.evaluate(equation);\r\n        const result = Number.isInteger(evalRes) ? evalRes : evalRes.toFixed(2);\r\n        this.setState({ result });\r\n      } catch (error) {\r\n        alert(\"You entered an invalid equation. Try again.\");\r\n      }\r\n    } else {\r\n      equation = equation.trim();\r\n      equation = equation.substr(0, equation.length - 1);\r\n    }\r\n\r\n    this.setState({ equation: equation });\r\n  };\r\n\r\n  clear() {\r\n    this.setState({ equation: \"\", result: 0 });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"calculator\">\r\n        <Screen result={this.state.result} equation={this.state.equation} />\r\n        <Keypad handlePress={this.handlePress} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Calculator from \"./components/calculator\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"section-1\">\n        <h1>Calculator</h1>\n        <p>This is my first React project.</p>\n      </div>\n      <Calculator />\n      <div className=\"section-2\">\n        <p>Check out my portfolio for more information.</p>\n        <a href=\"https://d15hw45h3r.github.io/portfolio/\">My portfolio</a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}